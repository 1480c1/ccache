BUILDING CODE FROM A RELEASE ARCHIVE
====================================

PREREQUISITES
-------------

To build ccache, you need:

  - GNU make (http://www.gnu.org/software/make/)
  - A C compiler (for instance GCC)
  - zlib (http://www.zlib.net)


INSTALLATION
------------

To compile and install ccache, run these commands:

    ./configure
    make
    make install

You may set the installation directory and other parameters by options to
"./configure". To see them, run "./configure --help".

There are two ways to use ccache. You can either prefix your compile commands
with "ccache" or you can create a symbolic link between ccache and the names of
your compilers. The first method is most convenient if you just want to try out
ccache or wish to use it for some specific projects. The second method is most
useful for when you wish to use ccache for all your compiles.

To install for usage by the first method just copy ccache to somewhere in your
path.

To install for the second method do something like this:

    cp ccache /usr/local/bin/
    ln -s ccache /usr/local/bin/gcc
    ln -s ccache /usr/local/bin/g++
    ln -s ccache /usr/local/bin/cc
    ln -s ccache /usr/local/bin/c++

This will work as long as /usr/local/bin comes before the path to the compiler
(e.g. gcc, which is usually in /usr/bin). After installing you may wish to run
"which gcc" to make sure that the correct link is being used.

Note! Do not use hard links, use symbolic links. Hard links will cause
"interesting" problems.


BUILDING CODE FROM THE SOURCE CODE REPOSITORY
=============================================

In addition to the prerequisites mentioned above, you also need:

 * asciidoc (http://www.methods.co.nz/asciidoc/) to build the documentation.
 * autoconf (http://www.gnu.org/software/autoconf/)
 * perl (http://www.perl.com/) to run the testsuite

Run "./autogen.sh" to generate "configure" and "config.h.in".
