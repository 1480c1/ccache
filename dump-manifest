#! /usr/bin/env python

import sys
from struct import calcsize, unpack

f = open(sys.argv[1])

def get_fixstr(n):
    return f.read(n)

def get_md4():
    return f.read(16).encode("hex")

def get_str():
    result = ""
    while True:
        ch = f.read(1)
        if ch == "\x00":
            return result
        result += ch

def get_uint16():
    return unpack("!H", f.read(2))[0]

def get_uint32():
    return unpack("!I", f.read(4))[0]

print "Magic: %s" % get_fixstr(4)
print "Version: %s" % get_uint16()

n = get_uint16()
print "File paths (%d):" % n
for i in range(n):
    print "  %d: %s" % (i, get_str())

n = get_uint16()
print "File infos (%d):" % n
for i in range(n):
    print "  %d:" % i
    print "    Path index: %d" % get_uint16()
    print "    Hash: %s" % get_md4()
    print "    Size: %d" %  get_uint32()

n = get_uint16()
print "Objects (%d):" % n
for i in range(n):
    print "  %d:" % i
    print "    File hash indexes:",
    m = get_uint16()
    for j in range(m):
        print get_uint16(),
    print
    print "    Hash: %s" % get_md4()
    print "    Size: %d" % get_uint32()
